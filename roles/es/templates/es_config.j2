cluster.name: {{cluster_name }}
node.name: {{ansible_nodename + '-' + es_role}}
{% if es_role == "master" %}
node.master: true
node.data: false
cluster.initial_master_nodes: {{ es_master_host }}
{% elif es_role == "client" %}
node.master: false
node.data: false
{% else  %}
node.master: false
node.data: true
{% endif %}
node.ingest: true
path.data: /data/es-{{es_role}} 
path.logs: /data/es-{{es_role}}
transport.port: {{tsport}}
http.port: {{http_port}}
bootstrap.memory_lock: true
network.host: {{ansible_ssh_host}}
indices.memory.index_buffer_size: 20%
indices.recovery.max_bytes_per_sec: 2g
node.attr.rack_id: {{ansible_ssh_host }}
cluster.routing.allocation.awareness.attributes: rack_id
cluster.routing.allocation.same_shard.host: true
thread_pool.search.max_queue_size: 2000 
action.destructive_requires_name: true
discovery.seed_hosts: {{ es_cluster_hosts }}
discovery.zen.minimum_master_nodes: {{master_number}}
xpack.security.enabled: true
xpack.security.transport.ssl.enabled: true
xpack.security.transport.ssl.verification_mode: certificate
xpack.security.transport.ssl.keystore.path: /etc/es-{{es_role}}/cert/elastic-certificates.p12
xpack.security.transport.ssl.truststore.path: /etc/es-{{es_role}}/cert/elastic-certificates.p12
xpack.security.http.ssl.enabled: false
xpack.security.http.ssl.keystore.path: /etc/es-{{es_role}}/cert/elastic-certificates.p12
xpack.security.http.ssl.truststore.path: /etc/es-{{es_role}}/cert/elastic-certificates.p12
xpack.security.http.ssl.client_authentication: optional
