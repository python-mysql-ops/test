---
- name: config the java home
  lineinfile: 
    path: /etc/profile
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
    state: "{{item.state }}"
    backrefs: "{{item.backrefs }}"
    insertbefore: "{{item.insertbefore }}"
  with_items:
    - { backrefs: yes, regexp: "^export.* JAVA_HOME=",state: absent,insertbefore: "^export\\s* JAVA_HOME",line: "export JAVA_HOME=/usr/share/elasticsearch/jdk"} 
    - { line: "export JAVA_HOME=/usr/share/elasticsearch/jdk", backrefs: no, regexp: "^export\\s* JAVA_HOME", state: present, insertbefore: "^export\\s* JAVA_HOME"}

- name: config PATH 
  lineinfile:
    path: /etc/profile
    line: "{{ item.line }}"
    insertafter: "{{item.insertafter }}"
    state: "{{item.state }}"
    regexp: "{{ item.regexp }}"
    backrefs: "{{item.backrefs }}"
  with_items:
    - {backrefs: yes, regexp: "^export.* PATH=\\$PATH:\\$JAVA_HOME/bin", state: absent, insertafter: "EOF" , line: "" }
    - {backrefs: no, regexp: "^export.* PATH=\\$PATH:\\$JAVA_HOME/bin", state: present, insertafter: "EOF", line: "export PATH=$PATH:$JAVA_HOME/bin" }

- name: update elasticsearch.service file
  lineinfile:
    path: /lib/systemd/system/elasticsearch.service
    regexp: "{{item.regexp}}"
    state: "{{item.state}}"
    insertafter: "{{item.insertafter}}"
  with_items:
    - { line: "^Environment=ES_PATH_CONF", state: absent, insertafter: "", regexp: "^Environment=ES_PATH_CONF" }

- name: add LimitMEMLOCK=infinity  elasticsearch.service file
  lineinfile:
    path: /lib/systemd/system/elasticsearch.service
    regexp: '^LimitMEMLOCK'
    line: 'LimitMEMLOCK=infinity'
    insertafter: '^StandardError'

- name: elasticsearch-env
  lineinfile:
    path: /usr/share/elasticsearch/bin/elasticsearch-env 
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
    state: "{{item.state }}"
    insertafter: "{{item.insertafter }}"
  with_items:
    - {line: "source /etc/sysconfig/elasticsearch", state: absent, insertafter: "", regexp: "^source\\s*/etc/sysconfig/elasticsearch" }
    - {line: "ES_TMPDIR=/tmp", state: present, insertafter: "EOF", regexp: "^ES_TMPDIR="}

- name: create es  datadir
  file:
    path: "/data/es-{{es_role}}"
    state: directory
    group: elasticsearch
    owner: elasticsearch

- name: create es config dir
  copy:
    remote_src: true
    src: /etc/elasticsearch/
    dest: "/etc/es-{{es_role}}"
    group: elasticsearch

- name: cp tls cert
  copy:
    src: ../templates/cert
    dest: "/etc/es-{{es_role}}"
    owner: elasticsearch
    group: elasticsearch
    mode: u=rw,g=rw,o=r

- name: setup systemctl service
  template:
    src: "{{item.src}}"
    dest: "{{item.dest}}"
  with_items:
    - {src: ../templates/es-systemctl.j2, dest: "/lib/systemd/system/es-{{es_role}}.service" }
    - {src: ../templates/es_config.j2, dest: "/etc/es-{{es_role}}/elasticsearch.yml" }     
 
- name: change jvm size
  lineinfile:
    path: /etc/es-{{es_role}}/jvm.options
    regexp: "{{item.re}}"
    line: "{{item.line}}"
  with_items:
    - { re: '^-Xms', line: "-Xms{{jvmsize}}"}
    - { re: '^-Xmx', line: "-Xmx{{jvmsize}}"}  

- name: start es service
  systemd:
    name: "es-{{es_role}}"
    daemon_reload: yes
    state: started
    enabled: yes


  
